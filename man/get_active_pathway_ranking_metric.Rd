% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spagi_master.R
\name{get_active_pathway_ranking_metric}
\alias{get_active_pathway_ranking_metric}
\title{get_active_pathway_ranking_metric}
\usage{
get_active_pathway_ranking_metric(active.pathway.path, processed.query.data,
  high.exp.th)
}
\arguments{
\item{active.pathway.path}{A list of active pathway path data for each cell/tissue type.}

\item{processed.query.data}{A list with expressed query data where each sublist corresponds for each cell/tissue type.}

\item{high.exp.th}{A high expression threshold value for the processed query data. It is used to get active (i.e., highly expressed) molecule proportion for each pathway path.}
}
\value{
This function returns a list of pathways' ranking metric for each cell/tissue type.
}
\description{
This function generates active pathway ranking metric for each cell/tissue type. It uses active pathway path and processed query data with a high expression threshold to generate the ranking metric.
}
\details{
This function generates active pathway ranking metric for each cell/tissue type. It uses active pathway path and processed query data with a high expression threshold to generate the ranking metric.
}
\examples{
## Here we will use "pathway.path" as background data from the SPAGI repository.
## Also we will use "ROR1.data" as query RNA-seq gene expression data. This data is for ocular lens epithelial cell differentiated from human pluripotent stem cells.
## These data sets are loaded automatically with the package.

## Pre-process the query data (ROR1.data), the data has already been made in CPM and log2 normalized format.
ROR1.processed.data<-preprocess_querydata(cell.tissue.data = ROR1.data, exp.cutoff.th = 1.8)
## Identify active pathway paths of the processed query data
ROR1.active.pathway<-identify_active_pathway_path(pathway.path = pathway.path, processed.query.data = ROR1.processed.data)
## Get active pathway ranking metric
ROR1.active.pathway.ranking.metric<-get_active_pathway_ranking_metric(active.pathway.path = ROR1.active.pathway, processed.query.data = ROR1.processed.data, high.exp.th = 7)
head(sort(unlist(ROR1.active.pathway.ranking.metric$ROR1_LEC), decreasing=T))

}
